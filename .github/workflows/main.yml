name: Deploy to Azure from GitPipeline Folder

on:
  push:
    paths:
      - 'gitpipeline/**'   # Trigger only if changes in this folder
  workflow_dispatch:

permissions:
  id-token: write
  contents: read

jobs:
  deploy:
    runs-on: self-hosted

    steps:
    - name: Checkout Code
      uses: actions/checkout@v3

    - name: Set up Terraform
      uses: hashicorp/setup-terraform@v3

    - name: Azure Login via OIDC
      uses: azure/login@v1
      with:
        client-id: ${{ secrets.AZURE_CLIENT_ID }}
        tenant-id: ${{ secrets.AZURE_TENANT_ID }}
        subscription-id: ${{ secrets.AZURE_SUBSCRIPTION_ID }}
    
    - name: Write secrets to terraform.auto.tfvars
      run: |
        echo 'client_id = "${{ secrets.AZURE_CLIENT_ID }}"' > terraform.auto.tfvars
        echo 'tenant_id = "${{ secrets.AZURE_TENANT_ID }}"' >> terraform.auto.tfvars
        echo 'subscription_id = "${{ secrets.AZURE_SUBSCRIPTION_ID }}"' >> terraform.auto.tfvars
      working-directory: ./gitpipeline

    - name: Terraform Init
      run: terraform init
      working-directory: ./gitpipeline

    - name: Terraform Plan
      run: terraform plan
      working-directory: ./gitpipeline

    - name: Terraform Apply
      run: terraform apply -auto-approve
      working-directory: ./gitpipeline
      env:
          TF_LOG: DEBUG
          TF_LOG_PATH: terraform.log

    - name: Show Terraform Output
      run: cat terraform.log || echo "No log found"
      working-directory: ./gitpipeline
